extend type Product {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Product", purpose: IMPLICIT_KEY_FIELD)
}
extend type SearchHistory {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "SearchHistory", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `SearchHistory`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "SearchHistory.user", purpose: IMPLICIT_REF_FIELD)
}
extend type Store {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Store", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Store`.`owner`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  ownerId: UUID! @fdc_generated(from: "Store.owner", purpose: IMPLICIT_REF_FIELD)
}
extend type StoreProduct {
  """
  ✨ Implicit foreign key field based on `StoreProduct`.`store`. It must match the value of `Store`.`id`. See `@ref` for how to customize it.
  """
  storeId: UUID! @fdc_generated(from: "StoreProduct.store", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `StoreProduct`.`product`. It must match the value of `Product`.`id`. See `@ref` for how to customize it.
  """
  productId: UUID! @fdc_generated(from: "StoreProduct.product", purpose: IMPLICIT_REF_FIELD)
}
extend type User {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "User", purpose: IMPLICIT_KEY_FIELD)
}
